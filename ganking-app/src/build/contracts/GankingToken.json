{
  "contractName": "GankingToken",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "franchisorPercentage",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "payee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "weiAmount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawnPayment",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "_INTERFACE_ID_SRT",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "franchisor",
          "type": "address"
        }
      ],
      "name": "franchisorBalanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "franchisorPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "franchisor",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "franchisorWithdrawPaymentsLeft",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "mintWithTokenURI",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "franchisor",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "start",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "paymentBalanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "franchisor",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "paymentBalanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "traderApp",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address payable",
          "name": "franchisor",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "withdrawPayment",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address payable",
          "name": "franchisor",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "withdrawPayment",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "franchisor",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "addFranchisor",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "traderAddr",
          "type": "address"
        }
      ],
      "name": "setTraderApp",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "possibleFranchisor",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "isTokenFranchisor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"franchisorPercentage\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"WithdrawnPayment\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"_INTERFACE_ID_SRT\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"franchisor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"addFranchisor\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"franchisor\",\"type\":\"address\"}],\"name\":\"franchisorBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"franchisorPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"franchisor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"franchisorWithdrawPaymentsLeft\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"possibleFranchisor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"isTokenFranchisor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"mintWithTokenURI\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"franchisor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"paymentBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"franchisor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"paymentBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"traderAddr\",\"type\":\"address\"}],\"name\":\"setTraderApp\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"traderApp\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"franchisor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"withdrawPayment\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"franchisor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"withdrawPayment\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"addFranchisor(address,uint256)\":{\"params\":{\"franchisor\":\"address The new franchisor address\",\"tokenId\":\"uint256 ID of the token that ownership is being passed to\"}},\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"constructor\":{\"params\":{\"name\":\"- Name of the tokens created\",\"symbol\":\"- Symbol of the tokens created\"}},\"franchisorBalanceOf(address)\":{\"params\":{\"franchisor\":\"address to query the balance of\"},\"return\":\"uint256 representing the number of tokens owned by the franchisor address\"},\"franchisorWithdrawPaymentsLeft(address,uint256)\":{\"params\":{\"franchisor\":\"address to query the balance of\",\"tokenId\":\"The identifier for an NFT\"},\"return\":\"uint256 representing the amount of payments left to withdraw\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"isTokenFranchisor(address,uint256)\":{\"params\":{\"possibleFranchisor\":\"address The address of the possible franchisor\",\"tokenId\":\"uint256 The id of the token\"},\"return\":\"bool\"},\"mintWithTokenURI(address,uint256,string)\":{\"details\":\"Function to mint tokens\",\"params\":{\"to\":\"The address that will receive the minted tokens.\",\"tokenId\":\"The token id to mint.\",\"tokenURI\":\"The token URI of the minted token.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"name()\":{\"details\":\"Gets the token name\",\"return\":\"string representing the token name\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"owner address currently marked as the owner of the given token ID\"},\"paymentBalanceOf(address,uint256)\":{\"details\":\"Calls the overloaded `withdrawPayment` with defaults of `start` as the last withdrawn payment index, and `count` as the remaining payment lengthUsed by `withdrawPayment` to calculate how much a franchisor is owed.\",\"params\":{\"franchisor\":\"address to get the payment balance of\",\"tokenId\":\"The identifier for an NFT\"},\"return\":\"uint256 representing the balance in wei accumulated for a token\"},\"paymentBalanceOf(address,uint256,uint256,uint256)\":{\"params\":{\"count\":\"the number of payments left for this franchisor\",\"franchisor\":\"request withdrawal\",\"start\":\"the last franchisor that requested withdrawal\",\"tokenId\":\"- id of the token whose payment is being requested\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg sender to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"setTraderApp(address)\":{\"params\":{\"traderAddr\":\"address The app contract that will trade/manage this token\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol\",\"return\":\"string representing the token symbol\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"tokenURI(uint256)\":{\"details\":\"Returns an URI for a given token ID Throws if the token ID does not exist. May return an empty string.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query\"}},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Only overriding this function as both safeTransferFrom functions  call this one\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"withdrawPayment(address,uint256)\":{\"details\":\"Escrow should keep track of the payments that have been processed to  avoid double withdrawals\",\"params\":{\"franchisor\":\"address to withdraw payment for\",\"tokenId\":\"The identifier for an NFT\"}},\"withdrawPayment(address,uint256,uint256)\":{\"details\":\"if count is greater than the total number of payments left to withdraw, the function will only withdraw up to the payments left\",\"params\":{\"count\":\"The number of payments to traverse\",\"franchisor\":\"address to withdraw payment for\",\"tokenId\":\"The identifier for an NFT\"}}}},\"userdoc\":{\"methods\":{\"addFranchisor(address,uint256)\":{\"notice\":\"Allow the minter to add franchisors. Used for assigning more than one initial position\"},\"constructor\":\"Create a new Ganking Token Contract\",\"franchisorBalanceOf(address)\":{\"notice\":\"Gets the franchisor balance of tokens (i.e. the count of tokens) the specified address\"},\"franchisorWithdrawPaymentsLeft(address,uint256)\":{\"notice\":\"Gets the number of payments left to withdraw for a franchisor\"},\"isTokenFranchisor(address,uint256)\":{\"notice\":\"Returns true if the provide address is a token franchisor, false if not.\"},\"paymentBalanceOf(address,uint256)\":{\"notice\":\"Gets remaining payment balance accumulated from transfer of a  given token that has not been withdrawn\"},\"paymentBalanceOf(address,uint256,uint256,uint256)\":{\"notice\":\"Calculates the balance owned to the given franchisor, using the bookend model, where only the first franchisor and the last franchisor get anything. In this implementation, they each get 50% of the sale.\"},\"setTraderApp(address)\":{\"notice\":\"Sets approved address/contract to trade this token on behalf of token owners.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfers the ownership of a given token ID to another address  Usage of this method is discouraged, use `safeTransferFrom` whenever possible  Requires the msg sender to be the owner, approved, or operator\"},\"withdrawPayment(address,uint256)\":{\"notice\":\"Withdraws remaining payment balance accumulated from transfer of a  given token\"},\"withdrawPayment(address,uint256,uint256)\":{\"notice\":\"Withdraws payment accumulated from transfer of a given token from the last withdrawn payment up to a count\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/ivanmolto/Documents/ganking-gamers-royalty-sharing/ganking-app-contracts/contracts/GankingToken.sol\":\"GankingToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/ivanmolto/Documents/ganking-gamers-royalty-sharing/ganking-app-contracts/contracts/AbstractSharedRoyaltyToken.sol\":{\"keccak256\":\"0x88aaa7fec7e7c011af7d4a8cfa4ab3a0376ca8c8aa6623415730b2917e1baa0a\",\"urls\":[\"bzz-raw://ed7dd3b77ebf915d6d738a16860d70d13d3bd563a3dee80d561c9f9e2fb9c954\",\"dweb:/ipfs/QmWVVPhz4zPtXPCBeXLwsYXAGVhUSQ3etmCHRYeSCwkYKg\"]},\"/Users/ivanmolto/Documents/ganking-gamers-royalty-sharing/ganking-app-contracts/contracts/BookendSharedRoyaltyToken.sol\":{\"keccak256\":\"0x5112caebf60853c4fc1dc8a78b59c473b24eb442af0f4db38652df7c21168727\",\"urls\":[\"bzz-raw://29b275969def9af3257106a2dca067aebcbea5a1d0c73d7861f28787a5b5ddf4\",\"dweb:/ipfs/QmaTJk7bNLjPREHnDchWLC8gT6zEnM6qu1rwc1rAhy5PLJ\"]},\"/Users/ivanmolto/Documents/ganking-gamers-royalty-sharing/ganking-app-contracts/contracts/ERC721/ERC721.sol\":{\"keccak256\":\"0x0c385e22925fa325518a6f3938d845a62e2d72d7c2695a62e52428709adce3dc\",\"urls\":[\"bzz-raw://4f9b2418d70d5bc046c35d37ef123e91a01f26f0d46c3c9946aa57ffdf3878b3\",\"dweb:/ipfs/QmefuKCoczSUqotkQFZgd9iroS48peJmMkbNEWHxQkkpY3\"]},\"/Users/ivanmolto/Documents/ganking-gamers-royalty-sharing/ganking-app-contracts/contracts/ERC721/ERC721Enumerable.sol\":{\"keccak256\":\"0x98442c2255af215b4383a8ead84b95fce3ee573bc3dcb463bfc3e0bb0f7cd3c5\",\"urls\":[\"bzz-raw://efb56b054c3c26c34344bb14ab2f2cc88c6d1884cfffbe2c07f5870e1a0d53a5\",\"dweb:/ipfs/QmTkg37xXMX1xHLarFhbgn5qzfBMqFgTEfX8PYPLYH1o9M\"]},\"/Users/ivanmolto/Documents/ganking-gamers-royalty-sharing/ganking-app-contracts/contracts/ERC721/ERC721Metadata.sol\":{\"keccak256\":\"0x85658e70bf5df15c9d8b359ed75e6db2e4222f1bd0d3db770b2766a9b77f8742\",\"urls\":[\"bzz-raw://b88ccde6398c8eba6b285841dbbdeee9f3b02de3ec847d94d67f84a4c77fe0af\",\"dweb:/ipfs/QmQyapESt8WzYuun8d4ePyCJCVhMa7tXtTG96bxz9g74w2\"]},\"/Users/ivanmolto/Documents/ganking-gamers-royalty-sharing/ganking-app-contracts/contracts/ERC721/ERC721MetadataMintable.sol\":{\"keccak256\":\"0xcc1a52c7a19ca7d6ad65a5699c7e5d08731dbbae0db078b413ffcd39b7b73fb8\",\"urls\":[\"bzz-raw://08b1126dd40f4d0c5a829bf13f6cf17fd104fd3fbd5e8ee88cfc9653bee51fe6\",\"dweb:/ipfs/QmVj4c72ACioszT2qR4tvze5KdphicJdixg4BgXnsxGebf\"]},\"/Users/ivanmolto/Documents/ganking-gamers-royalty-sharing/ganking-app-contracts/contracts/ERC721/IERC721.sol\":{\"keccak256\":\"0x7dcb6ad2cf3f387930b7e6e0060df1bfc78196a88465178cf18df005b9185398\",\"urls\":[\"bzz-raw://1fc67a14bcdcb4e23928d3f377afed9d94eefb9e0306ac9fce9d72fecaa9d669\",\"dweb:/ipfs/QmNrMu2a9MQDWriJHZ2cc4GComGmV51b7ojnfTGJFcH9ja\"]},\"/Users/ivanmolto/Documents/ganking-gamers-royalty-sharing/ganking-app-contracts/contracts/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x2117f271b4aa32b0866aa3c6781b42bb63ec974fa4f41fa6982fcba70eb2dad8\",\"urls\":[\"bzz-raw://9a522f361ca18f05ca641ead932c9369086e591a4d9c70fad5dc95c48f187d2f\",\"dweb:/ipfs/QmU9wvf91mAAomfkK1JsxEUXxbGZbGJas1KaAofUiix1M1\"]},\"/Users/ivanmolto/Documents/ganking-gamers-royalty-sharing/ganking-app-contracts/contracts/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xe6c6512c0c2b5a84ce2b8b1473ac2debdf2b87670c4c337b2f9a72697733e063\",\"urls\":[\"bzz-raw://b965c51bce3a34acdcfdd4cb5002977765a1bb55167b7972f64093b91b067ba2\",\"dweb:/ipfs/QmNbNdAfJNE59e1Y3DNrCSiDn4F9F1iKjWzLkmujgdj3jd\"]},\"/Users/ivanmolto/Documents/ganking-gamers-royalty-sharing/ganking-app-contracts/contracts/GankingToken.sol\":{\"keccak256\":\"0xc75c2a237dbd8693fb355d0c96a376ab313765d241970280e85d589abf9e673a\",\"urls\":[\"bzz-raw://73eb29f7b5caf3da341ff53948d3531ce8f5bf61c80242f2b05ac549f942a1f2\",\"dweb:/ipfs/QmRvPQKyWudvBycviBQ2zZfy7dVk2yV6o3hrgTacgN7rAV\"]},\"/Users/ivanmolto/Documents/ganking-gamers-royalty-sharing/ganking-app-contracts/contracts/ISharedRoyaltyToken.sol\":{\"keccak256\":\"0x1e8b1b32d9023f7d6598bfb2b61dc38ef4bfea49b6c1d4808fb8b68a7487161a\",\"urls\":[\"bzz-raw://7d673cfdc42ac6bd608eb7aecdf2ba3c07f0373649de5ee5dff7e9ccfc74ba31\",\"dweb:/ipfs/QmYejfufoK2GRzovbXFQemoM5DARRFg6zGzXBE5xxyTNJR\"]},\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\",\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\"]},\"openzeppelin-solidity/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzz-raw://00a788c4631466c220b385bdd100c571d24b2deccd657615cfbcef6cadf669a4\",\"dweb:/ipfs/QmTEwDbjJNxmMNCDMqtuou3dyM8Wtp8Q9NFvn7SAVM7Jf3\"]},\"openzeppelin-solidity/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0xbe8eef6f2cb4e427f5c5d8a76865ccd06e55a4f1d6671ba312d45bfa705aedbf\",\"urls\":[\"bzz-raw://badf338a5e22c8658c01fe2ce89b487d9dbf6d2d9d5eb49df7415383e2498765\",\"dweb:/ipfs/QmP5aMkvFwMJyuQjKE8ADh5tkWYqonb4KjgkAjgYEVVFAv\"]},\"openzeppelin-solidity/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x01aedbf24e121a744262e04c7815b2a4c8ce604dee4829c5cff00943a594ccf3\",\"urls\":[\"bzz-raw://999ab32a6498d8ad8db61d47c3774aae2ff919acceebe2aeb50879bef62642c3\",\"dweb:/ipfs/QmephAYF5hoymu9qCFK6mURM2kZJCxU4ntUb4KTf1miVPT\"]},\"openzeppelin-solidity/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xe0ed10f53955c35eecb02724538650a155aa940be3f0a54cd3bde6c6b0c6e48c\",\"urls\":[\"bzz-raw://7dcfda88e3225987245908c3296f3559752647036804325ebfaa9fd1545161c3\",\"dweb:/ipfs/QmXxx5rHfLL57zdgyyyG9MMv4XGN7bpVSc2MuDcaCgto6u\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzz-raw://d877a87c5e29b9ffca3e334378058c051a4e012fd3635039681003a9376baf1f\",\"dweb:/ipfs/QmR45snf93cFXtB71TZcmoGy9DbcMha8CqgkDKaLvhjXZK\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106101d85760003560e01c806386abecf511610102578063a2378bdf11610095578063c87b56dd11610064578063c87b56dd14610d80578063d840fd8c14610e34578063e985e9c514610e99578063f84908a214610f22576101d8565b8063a2378bdf14610b51578063aa271e1a14610bc4578063b88d4fde14610c2d578063bcb927b614610d32576101d8565b806395d89b41116100d157806395d89b41146109fc578063983b2d5614610a8c5780639865027514610add578063a22cb46514610af4576101d8565b806386abecf51461088a5780638970c257146108f357806389fee1b514610962578063919c3db51461098d576101d8565b806323b872dd1161017a5780634f6ccce7116101495780634f6ccce71461065157806350bb4e7f146106a05780636352211e146107aa57806370a0823114610825576101d8565b806323b872dd146104be5780632ac35da31461052c5780632f745c591461057d5780633c800161146105ec576101d8565b8063095ea7b3116101b6578063095ea7b31461035a5780630e2cdba7146103b55780631383bfc71461041057806318160ddd14610493576101d8565b806301ffc9a7146101dd57806306fdde031461024f578063081812fc146102df575b600080fd5b3480156101e957600080fd5b506102356004803603602081101561020057600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610f79565b604051808215151515815260200191505060405180910390f35b34801561025b57600080fd5b50610264610fe0565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102a4578082015181840152602081019050610289565b50505050905090810190601f1680156102d15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156102eb57600080fd5b506103186004803603602081101561030257600080fd5b8101908080359060200190929190505050611082565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561036657600080fd5b506103b36004803603604081101561037d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506110d1565b005b3480156103c157600080fd5b5061040e600480360360408110156103d857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611212565b005b34801561041c57600080fd5b5061047d6004803603608081101561043357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803590602001909291905050506112b2565b6040518082815260200191505060405180910390f35b34801561049f57600080fd5b506104a86114be565b6040518082815260200191505060405180910390f35b61052a600480360360608110156104d457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506114cb565b005b34801561053857600080fd5b5061057b6004803603602081101561054f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114e6565b005b34801561058957600080fd5b506105d6600480360360408110156105a057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061158f565b6040518082815260200191505060405180910390f35b3480156105f857600080fd5b5061064f6004803603606081101561060f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050611602565b005b34801561065d57600080fd5b5061068a6004803603602081101561067457600080fd5b8101908080359060200190929190505050611869565b6040518082815260200191505060405180910390f35b3480156106ac57600080fd5b50610790600480360360608110156106c357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561070a57600080fd5b82018360208201111561071c57600080fd5b8035906020019184600183028401116401000000008311171561073e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061189d565b604051808215151515815260200191505060405180910390f35b3480156107b657600080fd5b506107e3600480360360208110156107cd57600080fd5b8101908080359060200190929190505050611923565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561083157600080fd5b506108746004803603602081101561084857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061199f565b6040518082815260200191505060405180910390f35b34801561089657600080fd5b5061089f611a21565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b3480156108ff57600080fd5b5061094c6004803603604081101561091657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611a2c565b6040518082815260200191505060405180910390f35b34801561096e57600080fd5b50610977611b07565b6040518082815260200191505060405180910390f35b34801561099957600080fd5b506109e6600480360360408110156109b057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611b0d565b6040518082815260200191505060405180910390f35b348015610a0857600080fd5b50610a11611c0d565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610a51578082015181840152602081019050610a36565b50505050905090810190601f168015610a7e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610a9857600080fd5b50610adb60048036036020811015610aaf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611caf565b005b348015610ae957600080fd5b50610af2611d20565b005b348015610b0057600080fd5b50610b4f60048036036040811015610b1757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611d32565b005b348015610b5d57600080fd5b50610baa60048036036040811015610b7457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611e6c565b604051808215151515815260200191505060405180910390f35b348015610bd057600080fd5b50610c1360048036036020811015610be757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e80565b604051808215151515815260200191505060405180910390f35b610d3060048036036080811015610c4357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610caa57600080fd5b820183602082011115610cbc57600080fd5b80359060200191846001830284011164010000000083111715610cde57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611e9d565b005b610d7e60048036036040811015610d4857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611ec3565b005b348015610d8c57600080fd5b50610db960048036036020811015610da357600080fd5b8101908080359060200190929190505050611f37565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610df9578082015181840152602081019050610dde565b50505050905090810190601f168015610e265780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610e4057600080fd5b50610e8360048036036020811015610e5757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ffe565b6040518082815260200191505060405180910390f35b348015610ea557600080fd5b50610f0860048036036040811015610ebc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506120cf565b604051808215151515815260200191505060405180910390f35b348015610f2e57600080fd5b50610f37612163565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110785780601f1061104d57610100808354040283529160200191611078565b820191906000526020600020905b81548152906001019060200180831161105b57829003601f168201915b5050505050905090565b600061108d82612189565b61109657600080fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006110dc82611923565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561111757600080fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480611157575061115681336120cf565b5b61116057600080fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b81600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611299576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806134c36022913960400191505060405180910390fd5b6112ad836112a78585611a2c565b84611602565b505050565b60008060096000848152602001908152602001600020905060008486019050816001018054905081116112e557806112ee565b81600101805490505b905060008090506009600086815260200190815260200160002060000160008154811061131757fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614156113c15760008790505b828110156113bf576064600b5460640385600101838154811061139a57fe5b906000526020600020015402816113ad57fe5b0482019150808060010191505061137b565b505b60008790505b828110156114af578873ffffffffffffffffffffffffffffffffffffffff168460000160018303815481106113f857fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156114a2576064600b5485600101838154811061145357fe5b9060005260206000200154028161146657fe5b048201915060006064600b5486600101848154811061148157fe5b9060005260206000200154028161149457fe5b06146114a1576001820191505b5b80806001019150506113c7565b50809350505050949350505050565b6000600e80549050905090565b6114d68383836121fb565b6114e182348361221e565b505050565b6114f66114f16123c3565b611e80565b61154b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806134936030913960400191505060405180910390fd5b80601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600061159a8361199f565b82106115a557600080fd5b600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106115ef57fe5b9060005260206000200154905092915050565b82600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611689576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806134c36022913960400191505060405180910390fd5b600060096000848152602001908152602001600020905060006116ac8685611a2c565b905060008260020160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000836001018054905061171188846123cb90919063ffffffff16565b1161171c578661171e565b825b9050600061176f898660020160008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054848a6112b2565b905061178482846123cb90919063ffffffff16565b8560020160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508873ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561180f573d6000803e3d6000fd5b508873ffffffffffffffffffffffffffffffffffffffff167f3d3ab7d78e99c30b0f84aa86c09e959872657e970a59b0148095a22c52a5c940826040518082815260200191505060405180910390a2505050505050505050565b60006118736114be565b821061187e57600080fd5b600e828154811061188b57fe5b90600052602060002001549050919050565b60006118af6118aa6123c3565b611e80565b611904576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806134936030913960400191505060405180910390fd5b61190e8484612453565b6119188383612474565b600190509392505050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561199657600080fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156119da57600080fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6368f3a53860e01b81565b600080600960008481526020019081526020016000209050611a4e84846124b2565b611aa3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180613506602d913960400191505060405180910390fd5b611afe8160020160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054826001018054905061251890919063ffffffff16565b91505092915050565b600b5481565b600082600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611b96576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806134c36022913960400191505060405180910390fd5b6000600960008581526020019081526020016000209050611c03858260020160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611bfd8888611a2c565b876112b2565b9250505092915050565b606060068054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611ca55780601f10611c7a57610100808354040283529160200191611ca5565b820191906000526020600020905b815481529060010190602001808311611c8857829003601f168201915b5050505050905090565b611cbf611cba6123c3565b611e80565b611d14576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806134936030913960400191505060405180910390fd5b611d1d81612562565b50565b611d30611d2b6123c3565b6125bc565b565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611d6b57600080fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b6000611e7883836124b2565b905092915050565b6000611e9682600861261690919063ffffffff16565b9050919050565b611ea88484846114cb565b611eb4848484846126f4565b611ebd57600080fd5b50505050565b611ed3611ece6123c3565b611e80565b611f28576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806134936030913960400191505060405180910390fd5b611f3382348361221e565b5050565b6060611f4282612189565b611f4b57600080fd5b600760008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611ff25780601f10611fc757610100808354040283529160200191611ff2565b820191906000526020600020905b815481529060010190602001808311611fd557829003601f168201915b50505050509050919050565b600081600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612087576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806134c36022913960400191505060405180910390fd5b600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915050919050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b61220533826128dd565b61220e57600080fd5b61221983838361297b565b505050565b6000600960008381526020019081526020016000209050806000018490806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550508060010183908060018154018082558091505090600182039060005260206000200160009091929091909150555061231e6001600a60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546123cb90919063ffffffff16565b600a60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061236b84836124b2565b6123bd5780600101805490508160020160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b50505050565b600033905090565b600080828401905083811015612449576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b61245d828261299f565b61246782826129b9565b61247081612a80565b5050565b61247d82612189565b61248657600080fd5b806007600084815260200190815260200160002090805190602001906124ad9291906133c1565b505050565b60008060096000848152602001908152602001600020905060008160020160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541191505092915050565b600061255a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612acc565b905092915050565b612576816008612b8c90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b6125d0816008612c6790919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561269d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806135336022913960400191505060405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60006127158473ffffffffffffffffffffffffffffffffffffffff16612d24565b61272257600190506128d5565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156127fd5780820151818401526020810190506127e2565b50505050905090810190601f16801561282a5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561284c57600080fd5b505af1158015612860573d6000803e3d6000fd5b505050506040513d602081101561287657600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000806128e983611923565b9050601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061297257508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b612986838383612d6f565b6129908382612fd0565b61299a82826129b9565b505050565b6129a9828261316e565b6129b58260008361221e565b5050565b600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050600d600083815260200190815260200160002081905550600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b600e80549050600f600083815260200190815260200160002081905550600e81908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b6000838311158290612b79576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612b3e578082015181840152602081019050612b23565b50505050905090810190601f168015612b6b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b612b968282612616565b15612c09576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650081525060200191505060405180910390fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b612c718282612616565b612cc6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806134e56021913960400191505060405180910390fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f9150808214158015612d6657506000801b8214155b92505050919050565b8273ffffffffffffffffffffffffffffffffffffffff16612d8f82611923565b73ffffffffffffffffffffffffffffffffffffffff1614612daf57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612de957600080fd5b612df281613303565b612e456001600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461251890919063ffffffff16565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612edb6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546123cb90919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006130286001600c60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061251890919063ffffffff16565b90506000600d6000848152602001908152602001600020549050818114613115576000600c60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061309557fe5b9060005260206000200154905080600c60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481106130ed57fe5b906000526020600020018190555081600d600083815260200190815260200160002081905550505b600c60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054809190600190036131679190613441565b5050505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156131a857600080fd5b6131b181612189565b156131bb57600080fd5b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506132606001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546123cb90919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146133be5760006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061340257805160ff1916838001178555613430565b82800160010185558215613430579182015b8281111561342f578251825591602001919060010190613414565b5b50905061343d919061346d565b5090565b81548183558181111561346857818360005260206000209182019101613467919061346d565b5b505050565b61348f91905b8082111561348b576000816000905550600101613473565b5090565b9056fe4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c6543616e27742062652075736564207769746820746865203078302061646472657373526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c655061796d656e74732063616e206f6e6c792062652077697468647261776e206279206672616e636869736f7273526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373a265627a7a72315820d976ca599ccac03cd6ebaaf45377e2f6b2d5ef681b3bf3de3d2838548b2ab04964736f6c63430005100032",
  "sourceMap": "225:2447:12:-;;;588:228;8:9:-1;5:2;;;30:1;27;20:12;5:2;588:228:12;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;588:228:12;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;588:228:12;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;588:228:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;588:228:12;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;588:228:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;788:20;740:4;746:6;718:40:19;385:10;737:20;;718:18;;;:40;;:::i;:::-;2023::2;1280:10;2042:20;;2023:18;;;:40;;:::i;:::-;772:4:5;764:5;:12;;;;;;;;;;;;:::i;:::-;;796:6;786:7;:16;;;;;;;;;;;;:::i;:::-;;890:49;455:10;909:29;;890:18;;;:49;;:::i;:::-;693:253;;318:24:18;329:12;:10;;;:12;;:::i;:::-;318:10;;;:24;;:::i;:::-;847:37:0;507:10;866:17;;847:18;;;:37;;:::i;:::-;343:21:1;320:20;:44;;;;260:111;1244:51:4;860:10;1263:31;;1244:18;;;:51;;:::i;:::-;588:228:12;;;225:2447;;1442:190:19;1532:10;1517:25;;:11;:25;;;;;1509:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1621:4;1585:20;:33;1606:11;1585:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1442:190;:::o;788:96:16:-;833:15;867:10;860:17;;788:96;:::o;786:119:18:-;842:21;855:7;842:8;:12;;;;;;:21;;;;:::i;:::-;890:7;878:20;;;;;;;;;;;;786:119;:::o;260:175:17:-;337:18;341:4;347:7;337:3;;;:18;;:::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:4;401;:11;;:20;413:7;401:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;260:175;;:::o;779:200::-;851:4;894:1;875:21;;:7;:21;;;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:4;:11;;:20;964:7;952:20;;;;;;;;;;;;;;;;;;;;;;;;;945:27;;779:200;;;;:::o;225:2447:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "225:2447:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;915:133:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;915:133:19;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;915:133:19;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1050:83:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1050:83:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1050:83:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3822:151:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3822:151:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3822:151:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3245:292;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3245:292:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3245:292:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3924:273:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3924:273:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3924:273:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;894:1230:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;894:1230:1;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;894:1230:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2037:94:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2037:94:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1446:203:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1446:203:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1496:99:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1496:99:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1496:99:12;;;;;;;;;;;;;;;;;;;:::i;:::-;;1675:210:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1675:210:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1675:210:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2597:975:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2597:975:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2597:975:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2468:148:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2468:148:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2468:148:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;604:239:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;604:239:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;604:239:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;604:239:7;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;604:239:7;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;604:239:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;604:239:7;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2647:177:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2647:177:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2647:177:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2273:150;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2273:150:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2273:150:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;464:53:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;464:53:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;5551:459;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5551:459:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5551:459:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;218:35:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;218:35:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4811:453:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4811:453:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4811:453:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1241:87:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1241:87:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1241:87:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;607:90:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;607:90:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;607:90:18;;;;;;;;;;;;;;;;;;;:::i;:::-;;703:77;;8:9:-1;5:2;;;30:1;27;20:12;5:2;703:77:18;;;:::i;:::-;;4265:213:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4265:213:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4265:213:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1855:193:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1855:193:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1855:193:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;494:107:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;494:107:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;494:107:18;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6319:257:2;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;6319:257:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;6319:257:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6319:257:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6319:257:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;6319:257:2;;;;;;;;;;;;;;;:::i;:::-;;1120:177:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1120:177:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1527:151:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1527:151:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1527:151:5;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1527:151:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1926:197:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1926:197:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1926:197:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4799:173:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4799:173:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4799:173:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;390:24:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;390:24:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;915:133:19;985:4;1008:20;:33;1029:11;1008:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:40;;915:133;;;:::o;1050:83:5:-;1089:13;1121:5;1114:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1050:83;:::o;3822:151:2:-;3881:7;3908:16;3916:7;3908;:16::i;:::-;3900:25;;;;;;3942:15;:24;3958:7;3942:24;;;;;;;;;;;;;;;;;;;;;3935:31;;3822:151;;;:::o;3245:292::-;3308:13;3324:16;3332:7;3324;:16::i;:::-;3308:32;;3364:5;3358:11;;:2;:11;;;;3350:20;;;;;;3402:5;3388:19;;:10;:19;;;:58;;;;3411:35;3428:5;3435:10;3411:16;:35::i;:::-;3388:58;3380:67;;;;;;3485:2;3458:15;:24;3474:7;3458:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;3522:7;3518:2;3502:28;;3511:5;3502:28;;;;;;;;;;;;3245:292;;;:::o;3924:273:0:-;4029:10;7884:1;7865:21;;:7;:21;;;;7857:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4055:135;4084:10;4108:51;4139:10;4151:7;4108:30;:51::i;:::-;4173:7;4055:15;:135::i;:::-;3924:273;;;:::o;894:1230:1:-;1046:7;1065:19;1087:7;:16;1095:7;1087:16;;;;;;;;;;;1065:38;;1113:16;1140:5;1132;:13;1113:32;;1214:5;:14;;:21;;;;1203:8;:32;:91;;1286:8;1203:91;;;1250:5;:14;;:21;;;;1203:91;1192:102;;1305:15;1323:1;1305:19;;1409:7;:16;1417:7;1409:16;;;;;;;;;;;:28;;1438:1;1409:31;;;;;;;;;;;;;;;;;;;;;;;;;1395:45;;:10;:45;;;1391:258;;;1461:9;1473:5;1461:17;;1456:183;1484:8;1480:1;:12;1456:183;;;1621:3;1576:20;;1570:3;:26;1549:5;:14;;1564:1;1549:17;;;;;;;;;;;;;;;;:48;1548:76;;;;;;1517:107;;;;1494:3;;;;;;;1456:183;;;;1391:258;1715:9;1727:5;1715:17;;1710:383;1738:8;1734:1;:12;1710:383;;;1799:10;1771:38;;:5;:17;;1793:1;1789;:5;1771:24;;;;;;;;;;;;;;;;;;;;;;;;;:38;;;1767:316;;;1885:3;1861:20;;1841:5;:14;;1856:1;1841:17;;;;;;;;;;;;;;;;:40;1840:48;;;;;;1829:59;;;;2013:1;2006:3;1982:20;;1962:5;:14;;1977:1;1962:17;;;;;;;;;;;;;;;;:40;1961:48;;;;;;:53;1957:112;;2049:1;2038:12;;;;1957:112;1767:316;1748:3;;;;;;;1710:383;;;;2110:7;2103:14;;;;;894:1230;;;;;;:::o;2037:94:4:-;2081:7;2107:10;:17;;;;2100:24;;2037:94;:::o;1446:203:0:-;1556:37;1575:4;1581:2;1585:7;1556:18;:37::i;:::-;1604:38;1619:2;1623:9;1634:7;1604:14;:38::i;:::-;1446:203;;;:::o;1496:99:12:-;395:22:18;404:12;:10;:12::i;:::-;395:8;:22::i;:::-;387:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1578:10:12;1566:9;;:22;;;;;;;;;;;;;;;;;;1496:99;:::o;1675:210:4:-;1779:7;1818:16;1828:5;1818:9;:16::i;:::-;1810:5;:24;1802:33;;;;;;1852:12;:19;1865:5;1852:19;;;;;;;;;;;;;;;1872:5;1852:26;;;;;;;;;;;;;;;;1845:33;;1675:210;;;;:::o;2597:975:0:-;2731:10;7884:1;7865:21;;:7;:21;;;;7857:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2753:19;2775:7;:16;2783:7;2775:16;;;;;;;;;;;2753:38;;2802:28;2833:85;2877:10;2901:7;2833:30;:85::i;:::-;2802:116;;2928:26;2957:5;:46;;:58;3004:10;2957:58;;;;;;;;;;;;;;;;2928:87;;3025:21;3093:5;:14;;:21;;;;3049:29;3072:5;3049:18;:22;;:29;;;;:::i;:::-;:65;:120;;3164:5;3049:120;;;3129:20;3049:120;3025:144;;3180:15;3198:157;3228:10;3252:5;:33;;:45;3286:10;3252:45;;;;;;;;;;;;;;;;3311:13;3338:7;3198:16;:157::i;:::-;3180:175;;3414:59;3450:13;3414:18;:22;;:59;;;;:::i;:::-;3366:5;:33;;:45;3400:10;3366:45;;;;;;;;;;;;;;;:107;;;;3484:10;:19;;:28;3504:7;3484:28;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3484:28:0;3545:10;3528:37;;;3557:7;3528:37;;;;;;;;;;;;;;;;;;7935:1;;;;;2597:975;;;;:::o;2468:148:4:-;2526:7;2561:13;:11;:13::i;:::-;2553:5;:21;2545:30;;;;;;2592:10;2603:5;2592:17;;;;;;;;;;;;;;;;2585:24;;2468:148;;;:::o;604:239:7:-;740:4;395:22:18;404:12;:10;:12::i;:::-;395:8;:22::i;:::-;387:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;756:18:7;762:2;766:7;756:5;:18::i;:::-;784:31;797:7;806:8;784:12;:31::i;:::-;832:4;825:11;;604:239;;;;;:::o;2647:177:2:-;2702:7;2721:13;2737:11;:20;2749:7;2737:20;;;;;;;;;;;;;;;;;;;;;2721:36;;2792:1;2775:19;;:5;:19;;;;2767:28;;;;;;2812:5;2805:12;;;2647:177;;;:::o;2273:150::-;2328:7;2372:1;2355:19;;:5;:19;;;;2347:28;;;;;;2392:17;:24;2410:5;2392:24;;;;;;;;;;;;;;;;2385:31;;2273:150;;;:::o;464:53:0:-;507:10;464:53;;;:::o;5551:459::-;5673:7;5696:19;5718:7;:16;5726:7;5718:16;;;;;;;;;;;5696:38;;5766:34;5780:10;5792:7;5766:13;:34::i;:::-;5745:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5901:102;5944:5;:33;;:45;5978:10;5944:45;;;;;;;;;;;;;;;;5901:5;:14;;:21;;;;:25;;:102;;;;:::i;:::-;5882:121;;;5551:459;;;;:::o;218:35:1:-;;;;:::o;4811:453:0:-;4951:7;4922:10;7884:1;7865:21;;:7;:21;;;;7857:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4974:19;4996:7;:16;5004:7;4996:16;;;;;;;;;;;4974:38;;5042:215;5076:10;5104:5;:33;;:45;5138:10;5104:45;;;;;;;;;;;;;;;;5167:51;5198:10;5210:7;5167:30;:51::i;:::-;5236:7;5042:16;:215::i;:::-;5023:234;;;4811:453;;;;;:::o;1241:87:5:-;1282:13;1314:7;1307:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1241:87;:::o;607:90:18:-;395:22;404:12;:10;:12::i;:::-;395:8;:22::i;:::-;387:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;671:19;682:7;671:10;:19::i;:::-;607:90;:::o;703:77::-;746:27;760:12;:10;:12::i;:::-;746:13;:27::i;:::-;703:77::o;4265:213:2:-;4350:10;4344:16;;:2;:16;;;;4336:25;;;;;;4408:8;4371:18;:30;4390:10;4371:30;;;;;;;;;;;;;;;:34;4402:2;4371:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;4458:2;4431:40;;4446:10;4431:40;;;4462:8;4431:40;;;;;;;;;;;;;;;;;;;;;;4265:213;;:::o;1855:193:12:-;1972:4;1999:42;2013:18;2033:7;1999:13;:42::i;:::-;1992:49;;1855:193;;;;:::o;494:107:18:-;550:4;573:21;586:7;573:8;:12;;:21;;;;:::i;:::-;566:28;;494:107;;;:::o;6319:257:2:-;6471:31;6484:4;6490:2;6494:7;6471:12;:31::i;:::-;6520:48;6543:4;6549:2;6553:7;6562:5;6520:22;:48::i;:::-;6512:57;;;;;;6319:257;;;;:::o;1120:177:12:-;395:22:18;404:12;:10;:12::i;:::-;395:8;:22::i;:::-;387:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1244:46:12;1259:10;1271:9;1282:7;1244:14;:46::i;:::-;1120:177;;:::o;1527:151:5:-;1585:13;1618:16;1626:7;1618;:16::i;:::-;1610:25;;;;;;1652:10;:19;1663:7;1652:19;;;;;;;;;;;1645:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1527:151;;;:::o;1926:197:0:-;2052:7;2023:10;7884:1;7865:21;;:7;:21;;;;7857:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2082:22;:34;2105:10;2082:34;;;;;;;;;;;;;;;;2075:41;;1926:197;;;;:::o;4799:173:2:-;4903:4;4930:18;:25;4949:5;4930:25;;;;;;;;;;;;;;;:35;4956:8;4930:35;;;;;;;;;;;;;;;;;;;;;;;;;4923:42;;4799:173;;;;:::o;390:24:12:-;;;;;;;;;;;;;:::o;6765:152:2:-;6822:4;6838:13;6854:11;:20;6866:7;6854:20;;;;;;;;;;;;;;;;;;;;;6838:36;;6908:1;6891:19;;:5;:19;;;;6884:26;;;6765:152;;;:::o;5406:208::-;5524:39;5543:10;5555:7;5524:18;:39::i;:::-;5516:48;;;;;;5575:32;5589:4;5595:2;5599:7;5575:13;:32::i;:::-;5406:208;;;:::o;6682:535:0:-;6809:19;6831:7;:16;6839:7;6831:16;;;;;;;;;;;6809:38;;6858:5;:17;;6881:10;6858:34;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;6858:34:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6902:5;:14;;6922:7;6902:28;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;6902:28:0;;;;;;;;;;;;;;;;;;;;;;6977:54;7029:1;6977:22;:34;7000:10;6977:34;;;;;;;;;;;;;;;;:51;;:54;;;;:::i;:::-;6940:22;:34;6963:10;6940:34;;;;;;;;;;;;;;;:91;;;;7047:34;7061:10;7073:7;7047:13;:34::i;:::-;7042:169;;7145:5;:31;;:55;;;;7097:5;:33;;:45;7131:10;7097:45;;;;;;;;;;;;;;;:103;;;;7042:169;6682:535;;;;:::o;788:96:16:-;833:15;867:10;860:17;;788:96;:::o;834:176:21:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;3485:196:4:-;3548:24;3560:2;3564:7;3548:11;:24::i;:::-;3583:40;3611:2;3615:7;3583:27;:40::i;:::-;3634;3666:7;3634:31;:40::i;:::-;3485:196;;:::o;1915:144:5:-;2000:16;2008:7;2000;:16::i;:::-;1992:25;;;;;;2049:3;2027:10;:19;2038:7;2027:19;;;;;;;;;;;:25;;;;;;;;;;;;:::i;:::-;;1915:144;;:::o;7432:239:0:-;7539:4;7559:19;7581:7;:16;7589:7;7581:16;;;;;;;;;;;7559:38;;7663:1;7615:5;:33;;:45;7649:10;7615:45;;;;;;;;;;;;;;;;:49;7608:56;;;7432:239;;;;:::o;1274:134:21:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;786:119:18:-;842:21;855:7;842:8;:12;;:21;;;;:::i;:::-;890:7;878:20;;;;;;;;;;;;786:119;:::o;911:127::-;970:24;986:7;970:8;:15;;:24;;;;:::i;:::-;1023:7;1009:22;;;;;;;;;;;;911:127;:::o;779:200:17:-;851:4;894:1;875:21;;:7;:21;;;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;952:4;:11;;:20;964:7;952:20;;;;;;;;;;;;;;;;;;;;;;;;;945:27;;779:200;;;;:::o;10246:431:2:-;10397:4;10418:15;:2;:13;;;:15::i;:::-;10413:58;;10456:4;10449:11;;;;10413:58;10481:13;10513:2;10497:36;;;10547:10;10571:4;10589:7;10610:5;10497:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10497:128:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10497:128:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10497:128:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10497:128:2;;;;;;;;;;;;;;;;10481:144;;780:10;10653:16;;10643:26;;;:6;:26;;;;10635:35;;;10246:431;;;;;;;:::o;2443:227:12:-;2552:4;2572:13;2588:16;2596:7;2588;:16::i;:::-;2572:32;;2633:9;;;;;;;;;;;2622:20;;:7;:20;;;:40;;;;2657:5;2646:16;;:7;:16;;;2622:40;2614:49;;;2443:227;;;;:::o;2991:239:4:-;3076:38;3096:4;3102:2;3106:7;3076:19;:38::i;:::-;3125:47;3158:4;3164:7;3125:32;:47::i;:::-;3183:40;3211:2;3215:7;3183:27;:40::i;:::-;2991:239;;;:::o;6265:135:0:-;6328:24;6340:2;6344:7;6328:11;:24::i;:::-;6363:30;6378:2;6382:1;6385:7;6363:14;:30::i;:::-;6265:135;;:::o;4967:183:4:-;5080:12;:16;5093:2;5080:16;;;;;;;;;;;;;;;:23;;;;5051:17;:26;5069:7;5051:26;;;;;;;;;;;:52;;;;5113:12;:16;5126:2;5113:16;;;;;;;;;;;;;;;5135:7;5113:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5113:30:4;;;;;;;;;;;;;;;;;;;;;;4967:183;;:::o;5345:161::-;5448:10;:17;;;;5421:15;:24;5437:7;5421:24;;;;;;;;;;;:44;;;;5475:10;5491:7;5475:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5475:24:4;;;;;;;;;;;;;;;;;;;;;;5345:161;:::o;1732:187:21:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;260:175:17:-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:4;401;:11;;:20;413:7;401:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;260:175;;:::o;510:180::-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;678:5;655:4;:11;;:20;667:7;655:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;510:180;;:::o;686:610:23:-;746:4;1004:16;1030:19;1052:66;1030:88;;;;1219:7;1207:20;1195:32;;1258:11;1246:8;:23;;:42;;;;;1285:3;1273:15;;:8;:15;;1246:42;1238:51;;;;686:610;;;:::o;9321:402:2:-;9434:4;9414:24;;:16;9422:7;9414;:16::i;:::-;:24;;;9406:33;;;;;;9471:1;9457:16;;:2;:16;;;;9449:25;;;;;;9485:23;9500:7;9485:14;:23::i;:::-;9545:30;9573:1;9545:17;:23;9563:4;9545:23;;;;;;;;;;;;;;;;:27;;:30;;;;:::i;:::-;9519:17;:23;9537:4;9519:23;;;;;;;;;;;;;;;:56;;;;9609:28;9635:1;9609:17;:21;9627:2;9609:21;;;;;;;;;;;;;;;;:25;;:28;;;;:::i;:::-;9585:17;:21;9603:2;9585:21;;;;;;;;;;;;;;;:52;;;;9671:2;9648:11;:20;9660:7;9648:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;9708:7;9704:2;9689:27;;9698:4;9689:27;;;;;;;;;;;;9321:402;;;:::o;6121:1140:4:-;6395:22;6420:32;6450:1;6420:12;:18;6433:4;6420:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;6395:57;;6462:18;6483:17;:26;6501:7;6483:26;;;;;;;;;;;;6462:47;;6627:14;6613:10;:28;6609:323;;6657:19;6679:12;:18;6692:4;6679:18;;;;;;;;;;;;;;;6698:14;6679:34;;;;;;;;;;;;;;;;6657:56;;6761:11;6728:12;:18;6741:4;6728:18;;;;;;;;;;;;;;;6747:10;6728:30;;;;;;;;;;;;;;;:44;;;;6877:10;6844:17;:30;6862:11;6844:30;;;;;;;;;;;:43;;;;6609:323;;7018:12;:18;7031:4;7018:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;6121:1140;;;;:::o;7821:278:2:-;7906:1;7892:16;;:2;:16;;;;7884:25;;;;;;7928:16;7936:7;7928;:16::i;:::-;7927:17;7919:26;;;;;;7979:2;7956:11;:20;7968:7;7956:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;8015:28;8041:1;8015:17;:21;8033:2;8015:21;;;;;;;;;;;;;;;;:25;;:28;;;;:::i;:::-;7991:17;:21;8009:2;7991:21;;;;;;;;;;;;;;;:52;;;;8084:7;8080:2;8059:33;;8076:1;8059:33;;;;;;;;;;;;7821:278;;:::o;10838:171::-;10937:1;10901:38;;:15;:24;10917:7;10901:24;;;;;;;;;;;;;;;;;;;;;:38;;;10897:106;;10990:1;10955:15;:24;10971:7;10955:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;10897:106;10838:171;:::o;225:2447:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.4;\n\nimport \"./BookendSharedRoyaltyToken.sol\";\nimport \"./ERC721/ERC721Enumerable.sol\";\nimport \"./ERC721/ERC721MetadataMintable.sol\";\nimport \"openzeppelin-solidity/contracts/access/roles/MinterRole.sol\";\n\n\ncontract GankingToken is\n    ERC721MetadataMintable,\n    BookendSharedRoyaltyToken,\n    ERC721Enumerable\n{\n    // Address of the application to trade this token\n    address public traderApp;\n\n    /**\n     * @notice Create a new Ganking Token Contract\n     * @param name - Name of the tokens created\n     * @param symbol - Symbol of the tokens created\n     */\n    constructor(\n        string memory name,\n        string memory symbol,\n        uint256 franchisorPercentage\n    )\n        public\n        ERC721Metadata(name, symbol)\n        BookendSharedRoyaltyToken(franchisorPercentage)\n    {} // solhint-disable-line no-empty-blocks\n\n    /**\n     * @notice Allow the minter to add franchisors. Used for assigning more than one initial position\n     * @param franchisor address The new franchisor address\n     * @param tokenId uint256 ID of the token that ownership is being passed to\n     */\n    function addFranchisor(address franchisor, uint256 tokenId)\n        public\n        payable\n        onlyMinter\n    {\n        _addFranchisor(franchisor, msg.value, tokenId);\n    }\n\n    /**\n     * @notice Sets approved address/contract to trade this token on behalf of token owners.\n     * @param traderAddr address The app contract that will trade/manage this token\n     */\n    function setTraderApp(address traderAddr) public onlyMinter {\n        traderApp = traderAddr;\n    }\n\n    /**\n     * @notice Returns true if the provide address is a token franchisor, false if not.\n     * @param possibleFranchisor address The address of the possible franchisor\n     * @param tokenId uint256 The id of the token\n     * @return bool\n     */\n    function isTokenFranchisor(address possibleFranchisor, uint256 tokenId)\n        public\n        view\n        returns (bool)\n    {\n        return _isFranchisor(possibleFranchisor, tokenId);\n    }\n\n    /**\n     * @dev OVERRIDE from 721 token standard. Returns whether the given spender can transfer a given token ID.\n     * @param spender address of the spender to query\n     * @param tokenId uint256 ID of the token to be transferred\n     * @return bool whether the msg.sender is approved for the given token ID,\n     * is an operator of the owner, or is the owner of the token\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId)\n        internal\n        view\n        returns (bool)\n    {\n        address owner = ownerOf(tokenId);\n        return (spender == traderApp || spender == owner);\n    }\n}\n",
  "sourcePath": "/Users/ivanmolto/Documents/ganking-gamers-royalty-sharing/ganking-app-contracts/contracts/GankingToken.sol",
  "ast": {
    "absolutePath": "/Users/ivanmolto/Documents/ganking-gamers-royalty-sharing/ganking-app-contracts/contracts/GankingToken.sol",
    "exportedSymbols": {
      "GankingToken": [
        2209
      ]
    },
    "id": 2210,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2110,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:12"
      },
      {
        "absolutePath": "/Users/ivanmolto/Documents/ganking-gamers-royalty-sharing/ganking-app-contracts/contracts/BookendSharedRoyaltyToken.sol",
        "file": "./BookendSharedRoyaltyToken.sol",
        "id": 2111,
        "nodeType": "ImportDirective",
        "scope": 2210,
        "sourceUnit": 522,
        "src": "25:41:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ivanmolto/Documents/ganking-gamers-royalty-sharing/ganking-app-contracts/contracts/ERC721/ERC721Enumerable.sol",
        "file": "./ERC721/ERC721Enumerable.sol",
        "id": 2112,
        "nodeType": "ImportDirective",
        "scope": 2210,
        "sourceUnit": 1734,
        "src": "67:39:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ivanmolto/Documents/ganking-gamers-royalty-sharing/ganking-app-contracts/contracts/ERC721/ERC721MetadataMintable.sol",
        "file": "./ERC721/ERC721MetadataMintable.sol",
        "id": 2113,
        "nodeType": "ImportDirective",
        "scope": 2210,
        "sourceUnit": 1937,
        "src": "107:45:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/access/roles/MinterRole.sol",
        "file": "openzeppelin-solidity/contracts/access/roles/MinterRole.sol",
        "id": 2114,
        "nodeType": "ImportDirective",
        "scope": 2210,
        "sourceUnit": 2744,
        "src": "153:69:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2115,
              "name": "ERC721MetadataMintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1936,
              "src": "254:22:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721MetadataMintable_$1936",
                "typeString": "contract ERC721MetadataMintable"
              }
            },
            "id": 2116,
            "nodeType": "InheritanceSpecifier",
            "src": "254:22:12"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2117,
              "name": "BookendSharedRoyaltyToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 521,
              "src": "282:25:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BookendSharedRoyaltyToken_$521",
                "typeString": "contract BookendSharedRoyaltyToken"
              }
            },
            "id": 2118,
            "nodeType": "InheritanceSpecifier",
            "src": "282:25:12"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2119,
              "name": "ERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1733,
              "src": "313:16:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Enumerable_$1733",
                "typeString": "contract ERC721Enumerable"
              }
            },
            "id": 2120,
            "nodeType": "InheritanceSpecifier",
            "src": "313:16:12"
          }
        ],
        "contractDependencies": [
          370,
          521,
          1063,
          1733,
          1860,
          1936,
          2058,
          2085,
          2108,
          2471,
          2555,
          2743,
          2795,
          2805
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2209,
        "linearizedBaseContracts": [
          2209,
          1733,
          2085,
          521,
          370,
          1936,
          2743,
          2555,
          1860,
          2108,
          1063,
          2471,
          2058,
          2795,
          2805
        ],
        "name": "GankingToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2122,
            "name": "traderApp",
            "nodeType": "VariableDeclaration",
            "scope": 2209,
            "src": "390:24:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2121,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "390:7:12",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2138,
              "nodeType": "Block",
              "src": "814:2:12",
              "statements": []
            },
            "documentation": "@notice Create a new Ganking Token Contract\n@param name - Name of the tokens created\n@param symbol - Symbol of the tokens created",
            "id": 2139,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2131,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2124,
                    "src": "740:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2132,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2126,
                    "src": "746:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 2133,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2130,
                  "name": "ERC721Metadata",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1860,
                  "src": "725:14:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$1860_$",
                    "typeString": "type(contract ERC721Metadata)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "725:28:12"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2135,
                    "name": "franchisorPercentage",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2128,
                    "src": "788:20:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 2136,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2134,
                  "name": "BookendSharedRoyaltyToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 521,
                  "src": "762:25:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_BookendSharedRoyaltyToken_$521_$",
                    "typeString": "type(contract BookendSharedRoyaltyToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "762:47:12"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2124,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2139,
                  "src": "609:18:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2123,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "609:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2126,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2139,
                  "src": "637:20:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2125,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "637:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2128,
                  "name": "franchisorPercentage",
                  "nodeType": "VariableDeclaration",
                  "scope": 2139,
                  "src": "667:28:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2127,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "667:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "599:102:12"
            },
            "returnParameters": {
              "id": 2137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "814:0:12"
            },
            "scope": 2209,
            "src": "588:228:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2155,
              "nodeType": "Block",
              "src": "1234:63:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2149,
                        "name": "franchisor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2141,
                        "src": "1259:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2150,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3098,
                          "src": "1271:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1271:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2152,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2143,
                        "src": "1282:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2148,
                      "name": "_addFranchisor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 331,
                      "src": "1244:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 2153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1244:46:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2154,
                  "nodeType": "ExpressionStatement",
                  "src": "1244:46:12"
                }
              ]
            },
            "documentation": "@notice Allow the minter to add franchisors. Used for assigning more than one initial position\n@param franchisor address The new franchisor address\n@param tokenId uint256 ID of the token that ownership is being passed to",
            "id": 2156,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2146,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2145,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2676,
                  "src": "1219:10:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1219:10:12"
              }
            ],
            "name": "addFranchisor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2141,
                  "name": "franchisor",
                  "nodeType": "VariableDeclaration",
                  "scope": 2156,
                  "src": "1143:18:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2140,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1143:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2143,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2156,
                  "src": "1163:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2142,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1163:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1142:37:12"
            },
            "returnParameters": {
              "id": 2147,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1234:0:12"
            },
            "scope": 2209,
            "src": "1120:177:12",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2167,
              "nodeType": "Block",
              "src": "1556:39:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2163,
                      "name": "traderApp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2122,
                      "src": "1566:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2164,
                      "name": "traderAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2158,
                      "src": "1578:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1566:22:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2166,
                  "nodeType": "ExpressionStatement",
                  "src": "1566:22:12"
                }
              ]
            },
            "documentation": "@notice Sets approved address/contract to trade this token on behalf of token owners.\n@param traderAddr address The app contract that will trade/manage this token",
            "id": 2168,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2161,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2160,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2676,
                  "src": "1545:10:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1545:10:12"
              }
            ],
            "name": "setTraderApp",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2158,
                  "name": "traderAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 2168,
                  "src": "1518:18:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2157,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1518:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1517:20:12"
            },
            "returnParameters": {
              "id": 2162,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1556:0:12"
            },
            "scope": 2209,
            "src": "1496:99:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2182,
              "nodeType": "Block",
              "src": "1982:66:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2178,
                        "name": "possibleFranchisor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2170,
                        "src": "2013:18:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2179,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2172,
                        "src": "2033:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2177,
                      "name": "_isFranchisor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 354,
                      "src": "1999:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) view returns (bool)"
                      }
                    },
                    "id": 2180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1999:42:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2176,
                  "id": 2181,
                  "nodeType": "Return",
                  "src": "1992:49:12"
                }
              ]
            },
            "documentation": "@notice Returns true if the provide address is a token franchisor, false if not.\n@param possibleFranchisor address The address of the possible franchisor\n@param tokenId uint256 The id of the token\n@return bool",
            "id": 2183,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isTokenFranchisor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2170,
                  "name": "possibleFranchisor",
                  "nodeType": "VariableDeclaration",
                  "scope": 2183,
                  "src": "1882:26:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2169,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1882:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2172,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2183,
                  "src": "1910:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2171,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1910:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1881:45:12"
            },
            "returnParameters": {
              "id": 2176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2175,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2183,
                  "src": "1972:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2174,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1972:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1971:6:12"
            },
            "scope": 2209,
            "src": "1855:193:12",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2207,
              "nodeType": "Block",
              "src": "2562:108:12",
              "statements": [
                {
                  "assignments": [
                    2193
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2193,
                      "name": "owner",
                      "nodeType": "VariableDeclaration",
                      "scope": 2207,
                      "src": "2572:13:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2192,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2572:7:12",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2197,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2195,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2187,
                        "src": "2596:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2194,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        614
                      ],
                      "referencedDeclaration": 614,
                      "src": "2588:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 2196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2588:16:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2572:32:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2198,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2185,
                            "src": "2622:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 2199,
                            "name": "traderApp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2122,
                            "src": "2633:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2622:20:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2201,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2185,
                            "src": "2646:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 2202,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2193,
                            "src": "2657:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2646:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2622:40:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 2205,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2621:42:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2191,
                  "id": 2206,
                  "nodeType": "Return",
                  "src": "2614:49:12"
                }
              ]
            },
            "documentation": "@dev OVERRIDE from 721 token standard. Returns whether the given spender can transfer a given token ID.\n@param spender address of the spender to query\n@param tokenId uint256 ID of the token to be transferred\n@return bool whether the msg.sender is approved for the given token ID,\nis an operator of the owner, or is the owner of the token",
            "id": 2208,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isApprovedOrOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2185,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 2208,
                  "src": "2471:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2184,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2471:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2187,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2208,
                  "src": "2488:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2186,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2488:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2470:34:12"
            },
            "returnParameters": {
              "id": 2191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2190,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2208,
                  "src": "2552:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2189,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2552:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2551:6:12"
            },
            "scope": 2209,
            "src": "2443:227:12",
            "stateMutability": "view",
            "superFunction": 827,
            "visibility": "internal"
          }
        ],
        "scope": 2210,
        "src": "225:2447:12"
      }
    ],
    "src": "0:2673:12"
  },
  "legacyAST": {
    "absolutePath": "/Users/ivanmolto/Documents/ganking-gamers-royalty-sharing/ganking-app-contracts/contracts/GankingToken.sol",
    "exportedSymbols": {
      "GankingToken": [
        2209
      ]
    },
    "id": 2210,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2110,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:12"
      },
      {
        "absolutePath": "/Users/ivanmolto/Documents/ganking-gamers-royalty-sharing/ganking-app-contracts/contracts/BookendSharedRoyaltyToken.sol",
        "file": "./BookendSharedRoyaltyToken.sol",
        "id": 2111,
        "nodeType": "ImportDirective",
        "scope": 2210,
        "sourceUnit": 522,
        "src": "25:41:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ivanmolto/Documents/ganking-gamers-royalty-sharing/ganking-app-contracts/contracts/ERC721/ERC721Enumerable.sol",
        "file": "./ERC721/ERC721Enumerable.sol",
        "id": 2112,
        "nodeType": "ImportDirective",
        "scope": 2210,
        "sourceUnit": 1734,
        "src": "67:39:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ivanmolto/Documents/ganking-gamers-royalty-sharing/ganking-app-contracts/contracts/ERC721/ERC721MetadataMintable.sol",
        "file": "./ERC721/ERC721MetadataMintable.sol",
        "id": 2113,
        "nodeType": "ImportDirective",
        "scope": 2210,
        "sourceUnit": 1937,
        "src": "107:45:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/access/roles/MinterRole.sol",
        "file": "openzeppelin-solidity/contracts/access/roles/MinterRole.sol",
        "id": 2114,
        "nodeType": "ImportDirective",
        "scope": 2210,
        "sourceUnit": 2744,
        "src": "153:69:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2115,
              "name": "ERC721MetadataMintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1936,
              "src": "254:22:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721MetadataMintable_$1936",
                "typeString": "contract ERC721MetadataMintable"
              }
            },
            "id": 2116,
            "nodeType": "InheritanceSpecifier",
            "src": "254:22:12"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2117,
              "name": "BookendSharedRoyaltyToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 521,
              "src": "282:25:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BookendSharedRoyaltyToken_$521",
                "typeString": "contract BookendSharedRoyaltyToken"
              }
            },
            "id": 2118,
            "nodeType": "InheritanceSpecifier",
            "src": "282:25:12"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2119,
              "name": "ERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1733,
              "src": "313:16:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Enumerable_$1733",
                "typeString": "contract ERC721Enumerable"
              }
            },
            "id": 2120,
            "nodeType": "InheritanceSpecifier",
            "src": "313:16:12"
          }
        ],
        "contractDependencies": [
          370,
          521,
          1063,
          1733,
          1860,
          1936,
          2058,
          2085,
          2108,
          2471,
          2555,
          2743,
          2795,
          2805
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2209,
        "linearizedBaseContracts": [
          2209,
          1733,
          2085,
          521,
          370,
          1936,
          2743,
          2555,
          1860,
          2108,
          1063,
          2471,
          2058,
          2795,
          2805
        ],
        "name": "GankingToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2122,
            "name": "traderApp",
            "nodeType": "VariableDeclaration",
            "scope": 2209,
            "src": "390:24:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2121,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "390:7:12",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2138,
              "nodeType": "Block",
              "src": "814:2:12",
              "statements": []
            },
            "documentation": "@notice Create a new Ganking Token Contract\n@param name - Name of the tokens created\n@param symbol - Symbol of the tokens created",
            "id": 2139,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2131,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2124,
                    "src": "740:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2132,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2126,
                    "src": "746:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 2133,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2130,
                  "name": "ERC721Metadata",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1860,
                  "src": "725:14:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$1860_$",
                    "typeString": "type(contract ERC721Metadata)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "725:28:12"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2135,
                    "name": "franchisorPercentage",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2128,
                    "src": "788:20:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 2136,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2134,
                  "name": "BookendSharedRoyaltyToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 521,
                  "src": "762:25:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_BookendSharedRoyaltyToken_$521_$",
                    "typeString": "type(contract BookendSharedRoyaltyToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "762:47:12"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2124,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2139,
                  "src": "609:18:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2123,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "609:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2126,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2139,
                  "src": "637:20:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2125,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "637:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2128,
                  "name": "franchisorPercentage",
                  "nodeType": "VariableDeclaration",
                  "scope": 2139,
                  "src": "667:28:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2127,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "667:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "599:102:12"
            },
            "returnParameters": {
              "id": 2137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "814:0:12"
            },
            "scope": 2209,
            "src": "588:228:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2155,
              "nodeType": "Block",
              "src": "1234:63:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2149,
                        "name": "franchisor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2141,
                        "src": "1259:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2150,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3098,
                          "src": "1271:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1271:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2152,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2143,
                        "src": "1282:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2148,
                      "name": "_addFranchisor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 331,
                      "src": "1244:14:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 2153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1244:46:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2154,
                  "nodeType": "ExpressionStatement",
                  "src": "1244:46:12"
                }
              ]
            },
            "documentation": "@notice Allow the minter to add franchisors. Used for assigning more than one initial position\n@param franchisor address The new franchisor address\n@param tokenId uint256 ID of the token that ownership is being passed to",
            "id": 2156,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2146,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2145,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2676,
                  "src": "1219:10:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1219:10:12"
              }
            ],
            "name": "addFranchisor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2141,
                  "name": "franchisor",
                  "nodeType": "VariableDeclaration",
                  "scope": 2156,
                  "src": "1143:18:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2140,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1143:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2143,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2156,
                  "src": "1163:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2142,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1163:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1142:37:12"
            },
            "returnParameters": {
              "id": 2147,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1234:0:12"
            },
            "scope": 2209,
            "src": "1120:177:12",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2167,
              "nodeType": "Block",
              "src": "1556:39:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2163,
                      "name": "traderApp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2122,
                      "src": "1566:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2164,
                      "name": "traderAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2158,
                      "src": "1578:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1566:22:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2166,
                  "nodeType": "ExpressionStatement",
                  "src": "1566:22:12"
                }
              ]
            },
            "documentation": "@notice Sets approved address/contract to trade this token on behalf of token owners.\n@param traderAddr address The app contract that will trade/manage this token",
            "id": 2168,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2161,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2160,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2676,
                  "src": "1545:10:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1545:10:12"
              }
            ],
            "name": "setTraderApp",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2158,
                  "name": "traderAddr",
                  "nodeType": "VariableDeclaration",
                  "scope": 2168,
                  "src": "1518:18:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2157,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1518:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1517:20:12"
            },
            "returnParameters": {
              "id": 2162,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1556:0:12"
            },
            "scope": 2209,
            "src": "1496:99:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2182,
              "nodeType": "Block",
              "src": "1982:66:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2178,
                        "name": "possibleFranchisor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2170,
                        "src": "2013:18:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2179,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2172,
                        "src": "2033:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2177,
                      "name": "_isFranchisor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 354,
                      "src": "1999:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) view returns (bool)"
                      }
                    },
                    "id": 2180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1999:42:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2176,
                  "id": 2181,
                  "nodeType": "Return",
                  "src": "1992:49:12"
                }
              ]
            },
            "documentation": "@notice Returns true if the provide address is a token franchisor, false if not.\n@param possibleFranchisor address The address of the possible franchisor\n@param tokenId uint256 The id of the token\n@return bool",
            "id": 2183,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isTokenFranchisor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2170,
                  "name": "possibleFranchisor",
                  "nodeType": "VariableDeclaration",
                  "scope": 2183,
                  "src": "1882:26:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2169,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1882:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2172,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2183,
                  "src": "1910:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2171,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1910:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1881:45:12"
            },
            "returnParameters": {
              "id": 2176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2175,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2183,
                  "src": "1972:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2174,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1972:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1971:6:12"
            },
            "scope": 2209,
            "src": "1855:193:12",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2207,
              "nodeType": "Block",
              "src": "2562:108:12",
              "statements": [
                {
                  "assignments": [
                    2193
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2193,
                      "name": "owner",
                      "nodeType": "VariableDeclaration",
                      "scope": 2207,
                      "src": "2572:13:12",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2192,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2572:7:12",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2197,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2195,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2187,
                        "src": "2596:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2194,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        614
                      ],
                      "referencedDeclaration": 614,
                      "src": "2588:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 2196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2588:16:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2572:32:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2198,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2185,
                            "src": "2622:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 2199,
                            "name": "traderApp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2122,
                            "src": "2633:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2622:20:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2201,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2185,
                            "src": "2646:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 2202,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2193,
                            "src": "2657:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2646:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2622:40:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 2205,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2621:42:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2191,
                  "id": 2206,
                  "nodeType": "Return",
                  "src": "2614:49:12"
                }
              ]
            },
            "documentation": "@dev OVERRIDE from 721 token standard. Returns whether the given spender can transfer a given token ID.\n@param spender address of the spender to query\n@param tokenId uint256 ID of the token to be transferred\n@return bool whether the msg.sender is approved for the given token ID,\nis an operator of the owner, or is the owner of the token",
            "id": 2208,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isApprovedOrOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2185,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 2208,
                  "src": "2471:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2184,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2471:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2187,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2208,
                  "src": "2488:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2186,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2488:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2470:34:12"
            },
            "returnParameters": {
              "id": 2191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2190,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2208,
                  "src": "2552:4:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2189,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2552:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2551:6:12"
            },
            "scope": 2209,
            "src": "2443:227:12",
            "stateMutability": "view",
            "superFunction": 827,
            "visibility": "internal"
          }
        ],
        "scope": 2210,
        "src": "225:2447:12"
      }
    ],
    "src": "0:2673:12"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterAdded",
          "type": "event"
        },
        "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "MinterRemoved",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x3d3ab7d78e99c30b0f84aa86c09e959872657e970a59b0148095a22c52a5c940": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "payee",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "weiAmount",
              "type": "uint256"
            }
          ],
          "name": "WithdrawnPayment",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xDe541Ab2E3B029c412Ac07624e13e4E94Fe467b2",
      "transactionHash": "0x2f2a17707315ac752a0be9e127a4a10204115fcfb1aaec6edef2455857bec45f"
    }
  },
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-04-06T11:12:08.367Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "addFranchisor(address,uint256)": {
        "params": {
          "franchisor": "address The new franchisor address",
          "tokenId": "uint256 ID of the token that ownership is being passed to"
        }
      },
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "constructor": {
        "params": {
          "name": "- Name of the tokens created",
          "symbol": "- Symbol of the tokens created"
        }
      },
      "franchisorBalanceOf(address)": {
        "params": {
          "franchisor": "address to query the balance of"
        },
        "return": "uint256 representing the number of tokens owned by the franchisor address"
      },
      "franchisorWithdrawPaymentsLeft(address,uint256)": {
        "params": {
          "franchisor": "address to query the balance of",
          "tokenId": "The identifier for an NFT"
        },
        "return": "uint256 representing the amount of payments left to withdraw"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "isTokenFranchisor(address,uint256)": {
        "params": {
          "possibleFranchisor": "address The address of the possible franchisor",
          "tokenId": "uint256 The id of the token"
        },
        "return": "bool"
      },
      "mintWithTokenURI(address,uint256,string)": {
        "details": "Function to mint tokens",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "tokenId": "The token id to mint.",
          "tokenURI": "The token URI of the minted token."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "name()": {
        "details": "Gets the token name",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "owner address currently marked as the owner of the given token ID"
      },
      "paymentBalanceOf(address,uint256)": {
        "details": "Calls the overloaded `withdrawPayment` with defaults of `start` as the last withdrawn payment index, and `count` as the remaining payment lengthUsed by `withdrawPayment` to calculate how much a franchisor is owed.",
        "params": {
          "franchisor": "address to get the payment balance of",
          "tokenId": "The identifier for an NFT"
        },
        "return": "uint256 representing the balance in wei accumulated for a token"
      },
      "paymentBalanceOf(address,uint256,uint256,uint256)": {
        "params": {
          "count": "the number of payments left for this franchisor",
          "franchisor": "request withdrawal",
          "start": "the last franchisor that requested withdrawal",
          "tokenId": "- id of the token whose payment is being requested"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "setTraderApp(address)": {
        "params": {
          "traderAddr": "address The app contract that will trade/manage this token"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Only overriding this function as both safeTransferFrom functions  call this one",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "withdrawPayment(address,uint256)": {
        "details": "Escrow should keep track of the payments that have been processed to  avoid double withdrawals",
        "params": {
          "franchisor": "address to withdraw payment for",
          "tokenId": "The identifier for an NFT"
        }
      },
      "withdrawPayment(address,uint256,uint256)": {
        "details": "if count is greater than the total number of payments left to withdraw, the function will only withdraw up to the payments left",
        "params": {
          "count": "The number of payments to traverse",
          "franchisor": "address to withdraw payment for",
          "tokenId": "The identifier for an NFT"
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "addFranchisor(address,uint256)": {
        "notice": "Allow the minter to add franchisors. Used for assigning more than one initial position"
      },
      "constructor": "Create a new Ganking Token Contract",
      "franchisorBalanceOf(address)": {
        "notice": "Gets the franchisor balance of tokens (i.e. the count of tokens) the specified address"
      },
      "franchisorWithdrawPaymentsLeft(address,uint256)": {
        "notice": "Gets the number of payments left to withdraw for a franchisor"
      },
      "isTokenFranchisor(address,uint256)": {
        "notice": "Returns true if the provide address is a token franchisor, false if not."
      },
      "paymentBalanceOf(address,uint256)": {
        "notice": "Gets remaining payment balance accumulated from transfer of a  given token that has not been withdrawn"
      },
      "paymentBalanceOf(address,uint256,uint256,uint256)": {
        "notice": "Calculates the balance owned to the given franchisor, using the bookend model, where only the first franchisor and the last franchisor get anything. In this implementation, they each get 50% of the sale."
      },
      "setTraderApp(address)": {
        "notice": "Sets approved address/contract to trade this token on behalf of token owners."
      },
      "transferFrom(address,address,uint256)": {
        "notice": "Transfers the ownership of a given token ID to another address  Usage of this method is discouraged, use `safeTransferFrom` whenever possible  Requires the msg sender to be the owner, approved, or operator"
      },
      "withdrawPayment(address,uint256)": {
        "notice": "Withdraws remaining payment balance accumulated from transfer of a  given token"
      },
      "withdrawPayment(address,uint256,uint256)": {
        "notice": "Withdraws payment accumulated from transfer of a given token from the last withdrawn payment up to a count"
      }
    }
  }
}